buildscript {    repositories {        mavenCentral()    }    dependencies {        classpath 'com.android.tools.build:gradle:0.12.+'    }}apply plugin: 'android'android {    compileSdkVersion 19    buildToolsVersion "19.1.0"    sourceSets            {                main {                    manifest.srcFile 'AndroidManifest.xml'                    java.srcDirs = ['src']                    res.srcDirs = ['res']                    assets.srcDirs = ['assets']                    jni.srcDirs = []                    jniLibs.srcDir 'libs'                }                Properties properties = new Properties()                properties.load(project.rootProject.file('local.properties').newDataInputStream())                def ndkDir = properties.getProperty('ndk.dir')                task ndkBuild(type: Exec) {                    commandLine "$ndkDir/ndk-build.cmd", "--directory", "$projectDir/jni", '-j', Runtime.runtime.availableProcessors(),                            "APP_PLATFORM=android-8",                            "APP_BUILD_SCRIPT=$projectDir/jni/Android.mk",                            "NDK_OUT=$buildDir/jni/obj",                            "NDK_APP_DST_DIR=$projectDir/libs/\$(TARGET_ARCH_ABI)"                }                task nativeLibsToJar(type: Jar, description: 'create a jar with native libs') {                    destinationDir file("$buildDir/jni/libs")                    baseName 'jni'                    from fileTree(dir: "$buildDir/jni/libs", include: '**/*.so')                    into 'lib/'                }                tasks.withType(JavaCompile) {                    compileTask -> compileTask.dependsOn nativeLibsToJar                }                nativeLibsToJar.dependsOn 'ndkBuild'            }    buildTypes {        debug {            jniDebugBuild true        }    }}dependencies {    compile files('libs/real3d.jar')}